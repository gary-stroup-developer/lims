'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-0d41e2c9.js');

const ldOptionCss = "";

let LdOption = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
  }
  componentWillLoad() {
    // Setting selected via prop directly triggers the mutation observer to fire twice on attribute chage.
    // This is indeed only true for the selected attribute. The disabled attribute works fine when assigned directly.
    if (this.selected) {
      this.el.setAttribute('selected', '');
    }
  }
  render() {
    return (index.h(index.Host, { class: "ld-option" }, index.h("slot", null)));
  }
  get el() { return index.getElement(this); }
};
LdOption.style = ldOptionCss;

exports.ld_option = LdOption;
