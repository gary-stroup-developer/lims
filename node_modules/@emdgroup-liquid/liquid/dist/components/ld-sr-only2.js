import { HTMLElement, h, Host, proxyCustomElement } from '@stencil/core/internal/client';

const ldSrOnlyCss = ".ld-sr-only,:host{position:absolute;width:var(--ld-sp-1);height:var(--ld-sp-1);padding:0;overflow:hidden;clip:rect(0,0,0,0);border-width:0}";

let LdSrOnly = class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    return (h(Host, { class: "ld-sr-only" }, h("slot", null)));
  }
  static get style() { return ldSrOnlyCss; }
};
LdSrOnly = /*@__PURE__*/ proxyCustomElement(LdSrOnly, [1, "ld-sr-only"]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["ld-sr-only"];
  components.forEach(tagName => { switch (tagName) {
    case "ld-sr-only":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, LdSrOnly);
      }
      break;
  } });
}
defineCustomElement();

export { LdSrOnly as L, defineCustomElement as d };
