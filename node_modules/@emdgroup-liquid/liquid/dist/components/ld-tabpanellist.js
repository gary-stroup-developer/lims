import { HTMLElement, h, Host, proxyCustomElement } from '@stencil/core/internal/client';

const ldTabpanellistCss = "";

let LdTabpanellist$1 = class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    return (h(Host, { class: "ld-tabpanellist" }, h("slot", null)));
  }
  static get style() { return ldTabpanellistCss; }
};
LdTabpanellist$1 = /*@__PURE__*/ proxyCustomElement(LdTabpanellist$1, [1, "ld-tabpanellist"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["ld-tabpanellist"];
  components.forEach(tagName => { switch (tagName) {
    case "ld-tabpanellist":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, LdTabpanellist$1);
      }
      break;
  } });
}
defineCustomElement$1();

const LdTabpanellist = LdTabpanellist$1;
const defineCustomElement = defineCustomElement$1;

export { LdTabpanellist, defineCustomElement };
