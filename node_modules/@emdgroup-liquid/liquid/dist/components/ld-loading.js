import { HTMLElement, h, Host, proxyCustomElement } from '@stencil/core/internal/client';

const ldLoadingCss = ".ld-loading,:host{--ld-loading-size:1.5rem;--ld-loading-col:var(--ld-col-neutral-300);background:var(--ld-loading-col);height:var(--ld-loading-size);width:var(--ld-loading-size);display:inline-flex;flex-shrink:0;-webkit-mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 23 23\"><defs/><circle cx=\"11.5\" cy=\"11.5\" r=\"9.5\" stroke=\"currentColor\" stroke-dasharray=\"2.55 5\" stroke-width=\"4\"/></svg>');mask-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 23 23\"><defs/><circle cx=\"11.5\" cy=\"11.5\" r=\"9.5\" stroke=\"currentColor\" stroke-dasharray=\"2.55 5\" stroke-width=\"4\"/></svg>');animation:ld-loading-animation 1.5s linear infinite}@keyframes ld-loading-animation{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}";

let LdLoading$1 = class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    return h(Host, { class: "ld-loading" });
  }
  static get style() { return ldLoadingCss; }
};
LdLoading$1 = /*@__PURE__*/ proxyCustomElement(LdLoading$1, [1, "ld-loading"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["ld-loading"];
  components.forEach(tagName => { switch (tagName) {
    case "ld-loading":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, LdLoading$1);
      }
      break;
  } });
}
defineCustomElement$1();

const LdLoading = LdLoading$1;
const defineCustomElement = defineCustomElement$1;

export { LdLoading, defineCustomElement };
