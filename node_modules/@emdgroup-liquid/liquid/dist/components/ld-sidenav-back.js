import { HTMLElement, createEvent, h, proxyCustomElement } from '@stencil/core/internal/client';
import { g as getClassNames } from './getClassNames.js';
import { c as closest } from './closest.js';

const ldSidenavBackCss = ".ld-sidenav-back{--ld-sidenav-back-bg-inset:var(--ld-sp-6);--ld-sidenav-back-border-radius:var(--ld-br-l);--ld-sidenav-back-icon-size:var(--ld-sp-24);--ld-sidenav-back-col:var(--ld-col-neutral-800);--ld-sidenav-back-col-active:var(--ld-thm-primary-active);--ld-sidenav-back-col-hover:var(--ld-thm-primary);--ld-sidenav-back-col-focus:var(--ld-thm-primary);--ld-sidenav-back-indicator-col:transparent;--ld-sidenav-back-indicator-col-focus:var(--ld-thm-primary-focus);outline:none;display:block}@media (hover:hover){.ld-sidenav-back:where(:hover){--ld-sidenav-back-col:var(--ld-sidenav-back-col-hover);--ld-sidenav-back-indicator-col:var(--ld-col-neutral-300)}}.ld-sidenav-back:focus{--ld-sidenav-back-col:var(--ld-sidenav-back-col-focus);--ld-sidenav-back-indicator-col:var(--ld-sidenav-back-indicator-col-focus)}.ld-sidenav-back:active{--ld-sidenav-back-col:var(--ld-sidenav-back-col-active)}.ld-sidenav-back--rounded{--ld-sidenav-back-border-radius:var(--ld-br-full)}.ld-sidenav-back ::slotted(ld-sidenav-navitem){margin-top:var(--ld-sidenav-padding-y);margin-bottom:var(--ld-sidenav-padding-y)}.ld-sidenav-back.ld-sidenav-back--collapsed .ld-sidenav-back__bg{transform:translateX(calc(var(--ld-sidenav-width) - var(--ld-sidenav-width-collapsed)))}.ld-sidenav-back__btn-back{display:none;background-color:initial;position:relative;font:var(--ld-typo-body-s);border:0;cursor:pointer;-webkit-user-select:none;user-select:none;touch-action:manipulation;color:var(--ld-sidenav-back,var(--ld-col-neutral-800));grid-template-columns:auto 1fr;gap:var(--ld-sp-12);align-items:center;font-weight:700;line-height:1;box-sizing:border-box;padding:0;text-align:left;outline:none;margin:var(--ld-sidenav-padding-y) var(--ld-sidenav-padding-x);-webkit-touch-callout:none}.ld-sidenav-back__bg{position:absolute;top:calc(var(--ld-sidenav-back-bg-inset)*-1);right:calc(var(--ld-sidenav-back-bg-inset)*-1);bottom:calc(var(--ld-sidenav-back-bg-inset)*-1);left:calc(var(--ld-sidenav-back-bg-inset)*-1);display:block;opacity:.2;transition:opacity var(--ld-sidenav-transition-duration-collapse-expand) var(--ld-sidenav-transition-delay-collapse-expand) linear,transform var(--ld-sidenav-transition-duration-collapse-expand) ease;pointer-events:none}.ld-sidenav-back__btn-back-label,.ld-sidenav-back__icon{position:relative;z-index:0}.ld-sidenav-back__bg-center,.ld-sidenav-back__bg-left,.ld-sidenav-back__bg-right{background-color:var(--ld-sidenav-back-indicator-col);position:absolute;top:0;bottom:0;transition:transform var(--ld-sidenav-transition-duration-collapse-expand) ease;pointer-events:all}.ld-sidenav-back__bg-left,.ld-sidenav-back__bg-right{width:calc(var(--ld-sidenav-navitem-icon-size)*0.5 + var(--ld-sp-6))}.ld-sidenav-back__bg-left{left:0;border-bottom-left-radius:calc(var(--ld-sidenav-back-border-radius) + var(--ld-sp-6));border-top-left-radius:calc(var(--ld-sidenav-back-border-radius) + var(--ld-sp-6))}.ld-sidenav-back__bg-right{right:0;border-bottom-right-radius:calc(var(--ld-sidenav-back-border-radius) + var(--ld-sp-6));border-top-right-radius:calc(var(--ld-sidenav-back-border-radius) + var(--ld-sp-6))}.ld-sidenav-back--collapsed .ld-sidenav-back__bg-right{transform:translateX(calc(var(--ld-sidenav-translate-x-delta)*-1))}.ld-sidenav-back__bg-center{left:calc(var(--ld-sidenav-navitem-icon-size)*0.5 + var(--ld-sp-6));right:calc(var(--ld-sidenav-navitem-icon-size)*0.5 + var(--ld-sp-6));transform-origin:left}.ld-sidenav-back--collapsed .ld-sidenav-back__bg-center{transform:scaleX(0)}.ld-sidenav-back--is-back .ld-sidenav-back__btn-back{display:grid}.ld-sidenav-back--is-back .ld-sidenav-back__slot-container{display:none}.ld-sidenav-back__icon{width:var(--ld-sidenav-navitem-icon-size);aspect-ratio:1;display:flex;align-items:center;justify-content:center;position:relative;transition:transform var(--ld-sidenav-transition-duration-collapse-expand) ease}.ld-sidenav-back--collapsed .ld-sidenav-back__icon{transform:translateX(var(--ld-sidenav-translate-x-delta))}.ld-sidenav-back__icon:before{content:\"\";background-color:var(--ld-thm-primary-active);border-radius:var(--ld-br-full);height:var(--ld-sidenav-back-icon-size);overflow:hidden;position:absolute;width:var(--ld-sidenav-back-icon-size);z-index:-1}.ld-sidenav-back__btn-back-label{text-overflow:ellipsis;overflow:hidden;color:var(--ld-sidenav-back-col);white-space:nowrap;padding-right:var(--ld-sp-6);position:relative;transition:opacity var(--ld-sidenav-transition-duration-collapse-expand) linear,transform var(--ld-sidenav-transition-duration-collapse-expand) ease}.ld-sidenav-back--collapsed .ld-sidenav-back__btn-back-label{opacity:0;transform:translateX(var(--ld-sidenav-translate-x-delta))}";

let LdSidenavBack$1 = class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.ldSidenavBack = createEvent(this, "ldSidenavBack", 7);
    /** Used as aria-label for the back button */
    this.backLabel = 'Back';
    this.parentLabel = '';
    this.rounded = false;
    this.onClick = () => {
      this.ldSidenavBack.emit();
    };
    this.onKeyDown = (ev) => {
      if ([' ', 'Enter'].includes(ev.key)) {
        ev.preventDefault();
        this.ldSidenavBack.emit();
      }
    };
  }
  handleSidenavCollapsedChange(ev) {
    if (ev.target !== this.sidenav)
      return;
    this.sidenavCollapsed = ev.detail;
  }
  handleSidenavBreakpointChange(ev) {
    if (ev.target !== this.sidenav)
      return;
    this.sidenavClosable = ev.detail;
  }
  /**
   * @internal
   * Updates the label of the back button.
   */
  async updateLabel(text) {
    this.parentLabel = text || '';
  }
  componentWillLoad() {
    this.sidenav = closest('ld-sidenav', this.el);
    this.rounded = !!this.el.querySelector('ld-sidenav-navitem[rounded]');
  }
  render() {
    const cl = getClassNames([
      'ld-sidenav-back',
      this.parentLabel && 'ld-sidenav-back--is-back',
      this.rounded && 'ld-sidenav-back--rounded',
      this.sidenavCollapsed &&
        !this.sidenavClosable &&
        'ld-sidenav-back--collapsed',
    ]);
    return (h("div", { tabIndex: this.parentLabel ? 0 : undefined, role: this.parentLabel ? 'button' : undefined, "aria-label": this.backLabel, class: cl, onClick: this.onClick, onKeyDown: this.onKeyDown, part: "back focusable" }, h("div", { class: "ld-sidenav-back__btn-back", part: "btn-back" }, h("div", { class: "ld-sidenav-back__bg", part: "bg" }, h("div", { class: "ld-sidenav-back__bg-left" }), h("div", { class: "ld-sidenav-back__bg-center" }), h("div", { class: "ld-sidenav-back__bg-right" })), h("div", { class: "ld-sidenav-back__icon", part: "icon-container" }, h("svg", { part: "icon", width: "12", height: "12", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, h("path", { d: "M4.333 1.832 1 5.999l3.333 4.166M1 6h10", stroke: "#F8F8FC", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" }))), h("span", { class: "ld-sidenav-back__btn-back-label", part: "label" }, this.parentLabel)), h("div", { class: "ld-sidenav-back__slot-container", part: "slot-container" }, h("slot", null))));
  }
  get el() { return this; }
  static get style() { return ldSidenavBackCss; }
};
LdSidenavBack$1 = /*@__PURE__*/ proxyCustomElement(LdSidenavBack$1, [1, "ld-sidenav-back", {
    "backLabel": [1, "back-label"],
    "parentLabel": [32],
    "rounded": [32],
    "sidenavCollapsed": [32],
    "sidenavClosable": [32],
    "updateLabel": [64]
  }, [[9, "ldSidenavCollapsedChange", "handleSidenavCollapsedChange"], [9, "ldSidenavBreakpointChange", "handleSidenavBreakpointChange"]]]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["ld-sidenav-back"];
  components.forEach(tagName => { switch (tagName) {
    case "ld-sidenav-back":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, LdSidenavBack$1);
      }
      break;
  } });
}
defineCustomElement$1();

const LdSidenavBack = LdSidenavBack$1;
const defineCustomElement = defineCustomElement$1;

export { LdSidenavBack, defineCustomElement };
