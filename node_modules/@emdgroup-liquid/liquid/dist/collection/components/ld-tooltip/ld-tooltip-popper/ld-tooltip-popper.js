import { Component, Element, h, Host, Prop } from '@stencil/core';
import { getClassNames } from '../../../utils/getClassNames';
import '../../../components'; // type definitions for type checks and intelliSense
/** @internal **/
export class LdTooltipPopper {
  constructor() {
    /** Event type that triggers the tooltip */
    this.triggerType = 'hover';
  }
  render() {
    return (h(Host, { class: getClassNames([
        'ld-tooltip',
        this.arrow && 'ld-tooltip--with-arrow',
        this.hasDefaultTrigger && 'ld-tooltip--with-default-trigger',
        this.triggerType === 'click' && 'ld-tooltip--interactive',
      ]), role: "tooltip" },
      h("slot", null)));
  }
  static get is() { return "ld-tooltip-popper"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["ld-tooltip-popper.css"]
  }; }
  static get styleUrls() { return {
    "$": ["ld-tooltip-popper.css"]
  }; }
  static get properties() { return {
    "arrow": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Show arrow"
      },
      "attribute": "arrow",
      "reflect": false
    },
    "triggerType": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'click' | 'hover'",
        "resolved": "\"click\" | \"hover\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Event type that triggers the tooltip"
      },
      "attribute": "trigger-type",
      "reflect": false,
      "defaultValue": "'hover'"
    },
    "hasDefaultTrigger": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Whether the tooltip has a custom trigger or not"
      },
      "attribute": "has-default-trigger",
      "reflect": false
    }
  }; }
  static get elementRef() { return "element"; }
}
