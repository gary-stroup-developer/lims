import { Component, h, Host, Prop } from '@stencil/core';
import { getClassNames } from '../../utils/getClassNames';
import { getLdAssetPath } from '../../utils/getLdAssetPath';
import '../../components'; // type definitions for type checks and intelliSense
/**
 * @virtualProp ref - reference to component
 * @virtualProp {string | number} key - for tracking the node's identity when working with lists
 * @part pattern - Element containing the cells pattern
 * @part content - Element wrapping the slot
 */
export class LdBgCells {
  constructor() {
    /** Cells pattern */
    this.type = 'safc';
  }
  render() {
    const assetPath = getLdAssetPath(`./assets/${this.type}-cell.svg`);
    return (h(Host, { class: getClassNames(['ld-bg-cells', `ld-bg-cells--${this.type}`]) },
      h("div", { class: "ld-bg-cells__pattern", part: "pattern", style: {
          '--ld-bg-cells-image': `url(${assetPath})`,
        } }),
      h("div", { class: "ld-bg-cells__content", part: "content" },
        h("slot", null))));
  }
  static get is() { return "ld-bg-cells"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["ld-bg-cells.css"]
  }; }
  static get styleUrls() { return {
    "$": ["ld-bg-cells.css"]
  }; }
  static get assetsDirs() { return ["assets"]; }
  static get properties() { return {
    "type": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "CellType",
        "resolved": "\"bioreliance\" | \"f\" | \"hexagon\" | \"millipore\" | \"qa-x2f-qc\" | \"safc\" | \"sigma-aldrich\" | \"t\" | \"tile\"",
        "references": {
          "CellType": {
            "location": "local"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Cells pattern"
      },
      "attribute": "type",
      "reflect": false,
      "defaultValue": "'safc'"
    }
  }; }
}
