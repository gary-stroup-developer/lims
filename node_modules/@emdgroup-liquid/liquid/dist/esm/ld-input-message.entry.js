import { r as registerInstance, h, H as Host } from './index-18aa7cbc.js';

const ldInputMessageCss = ".ld-input-message,:host{--ld-input-message-valid-text-col:var(--ld-thm-success);--ld-input-message-error-text-col:var(--ld-thm-error);display:inline-flex;align-items:baseline;font:var(--ld-typo-body-s);line-height:1.5}.ld-input-message--info .ld-input-message__icon,:host(.ld-input-message--info) .ld-input-message__icon{--ld-icon-secondary-col:var(--ld-col-neutral-900);color:var(--ld-thm-warning)}.ld-input-message--valid,:host(.ld-input-message--valid){color:var(--ld-input-message-valid-text-col)}.ld-input-message--error,:host(.ld-input-message--error){color:var(--ld-input-message-error-text-col)}.ld-input-message__icon{transform:translateY(var(--ld-sp-2));margin-top:var(--ld-sp-2);margin-right:var(--ld-sp-6);flex-shrink:0}";

let LdInputMessage = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /** Input message mode. */
    this.mode = 'error';
  }
  render() {
    return (h(Host, { class: `ld-input-message ld-input-message--${this.mode}` }, h("ld-icon", { class: "ld-input-message__icon", name: this.mode, part: "icon", size: "sm" }), h("span", { "aria-live": "assertive" }, h("slot", null))));
  }
  static get assetsDirs() { return ["assets"]; }
};
LdInputMessage.style = ldInputMessageCss;

export { LdInputMessage as ld_input_message };
